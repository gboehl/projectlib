# fnk.yaml ---
#
# Description: a small NK-FF model
# Author: Gregor Boehl [mail@gregorboehl.com]
# Last-Updated: 02/03/20

declarations:
  name: 'financial NK'
  variables: [Pi, y, r, rn, mc, s, n, c, l, w, dy, a, u, vr, b]
  constrained: [r]
  parameters: [beta, zeta, sigma, eta, theta, nu, psi, phi_pi, phi_y, rho_a, rho_u, rho_b, rho_r, sig_a, sig_u, sig_b, sig_r, trend, mean_pi, mean_spread, elb_level]
  para_func: [kappa, x_bar]
  shocks: [e_a, e_r, e_u, e_b]
  observables: [GDP, Infl, FFR]

equations:
  model:
    # Euler equation
    - c = c(+1) - 1/sigma*(r - Pi(+1) + u + b)

    - y = l + a

    - y = c

    - w = eta*l + sigma*c

    # Phillips curve
    - Pi = beta*Pi(+1) + kappa*mc

    # marginal costs
    - mc = w + theta*(r - Pi(+1) + s) - a

    # endogenous spread
    - s = nu*(w + l - n) + u

    # net worth
    - n = psi*y

    # Taylor rule
    - rn = phi_pi*Pi + phi_y*y + vr

    # Technology Shock
    - a = rho_a*a(-1) + e_a

    # monetary policy shocks
    - vr = rho_r*vr(-1) + e_r

    # risk premium shock (exogenous spread)
    - u = rho_u*u(-1) + e_u 

    # preference shock
    - b = rho_b*b(-1) + e_b

    # output growth
    - dy = y - y(-1)

  constraint:
    # ZLB
    - r = rn
    
  observables:
    # not used for this paper
    GDP : dy + trend
    Infl : Pi + mean_pi
    FFR : r + (1/beta - 1)*100

calibration:
  parameters:
    elb_level: .05
    beta: .99
    sigma: 1.
    eta: .5
    zeta: .66
    theta: 1.
    nu: 0.2
    psi: 8
    phi_pi: 1.5
    phi_y: .2
    rho_u: .9
    rho_b: .9
    rho_a: .9
    rho_r: .7
    sig_u: .1
    sig_a: .1
    sig_b: .1
    sig_r: .1
    trend: 0.405 # mean values from RANK estimation in Boehl & Strobel (2024)
    mean_pi: 0.659 # mean values from RANK estimation in Boehl & Strobel (2024)
    mean_spread: 0.414 # mean values from RANK-FF estimation in Boehl & Strobel (2024)

  parafunc:
    kappa: (1-zeta)*(1-beta*zeta)/zeta
    x_bar: -(1/beta - 1)*100 + elb_level

  covariances:
  # also not used here
    e_a: sig_a
    e_r: sig_r
    e_u: sig_u
    e_b: sig_b

estimation:
  # also not used here
  prior:
    nu      : [None, .001, .999, beta, .2, .2]
